# config/services.yaml
services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means
    # fetching services directly from the container via $container->get() won't work.
    # The best practice is to be explicit about your dependencies anyway.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php,Usecase,Domain/ValueObject,Domain/Exception}'


  #  App\Infrastructure\Persistence\Doctrine\Repository\UserRepositoryImpl:
#    autowire: true

  Symfony\Component\Security\Core\Encoder\NativePasswordEncoder:
    autowire: true
    public: true

  App\Infrastructure\Security\Symfony\UserLoader:
    arguments:
      - '@App\Infrastructure\Persistence\Doctrine\Repository\RepositoryImpl'


  #Command Handlers
  App\Usecase\RegisterUserHandler:
    tags:
      - { name: command_handler, handles: App\Usecase\Command\RegisterUserCommand, method: registerUser }


#  #Use Case Handlers
#  App\Usecase\RegisterUserHandler:
#    arguments:
#    - '@App\Infrastructure\Security\Symfony\PasswordEncoderAdapter2'
#    - '@App\Infrastructure\Validator\Symfony\ValidatorAdapter'
#    - '@App\Infrastructure\Persistence\Doctrine\Repository\RepositoryImpl'
#
#  #Adapters
#  App\Infrastructure\Security\Symfony\PasswordEncoderAdapter2:
#    arguments:
#      - '@Symfony\Component\Security\Core\Encoder\NativePasswordEncoder'
#
#  App\Infrastructure\Validator\Symfony\ValidatorAdapter:
#    arguments:
#      - '@Symfony\Component\Validator\Validator\RecursiveValidator'
#

